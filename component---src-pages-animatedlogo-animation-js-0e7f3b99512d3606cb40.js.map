{"version":3,"sources":["webpack:///./src/pages/animatedlogo/animation.js"],"names":["Animation","props","_this","_React$Component","call","this","state","width","height","last","Date","now","lastBox","boxes","x","y","velx","vely","w","h","updateAnimationState","bind","_assertThisInitialized","updateDimensions","spawnText","current","length","push","setState","dimensions","console","log","componentDidMount","rAF","requestAnimationFrame","_this2","dt","forEach","box","componentWillUnmount","cancelAnimationFrame","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Canvas","React","Component","_this3","_React$Component2","saveContext","bgColor","ctx","componentDidUpdate","_this4","canvas","clearRect","fillStyle","fillRect","font","fillText","PureCanvas","contextRef","_this5","_React$Component3","window","addEventListener","resize","divElement","clientHeight","clientWidth","removeEventListener","_this6","ref","style","node","getContext"],"mappings":"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","file":"component---src-pages-animatedlogo-animation-js-0e7f3b99512d3606cb40.js","sourcesContent":["import React from \"react\";\n\nexport default class Animation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { width: 1000, height: 1000, last: Date.now(), lastBox: Date.now(), boxes: [{ x: 100, y: 100, velx: 80, vely: 20, w: 720, h: 80 }, { x: 200, y: 200, velx: 400, vely: 8, w: 720, h: 80 } ] };\n\n        this.updateAnimationState = this.updateAnimationState.bind(this);\n        this.updateDimensions = this.updateDimensions.bind(this);\n    }\n\n    spawnText(current){\n        if((this.state.lastBox - current)/1000 < -0.2 ){\n        if (this.state.boxes.length < 20) {\n            this.state.boxes.push({x: this.state.width / 2 - 420, y: this.state.height / 2, velx: 80, vely: 80, w:720, h: 80});\n            this.setState({lastBox: Date.now()});\n        }\n        }\n    }\n\n    updateDimensions(dimensions){\n        console.log(dimensions);\n        this.setState({width: dimensions.width, height: dimensions.height});\n    }\n\n    componentDidMount() {\n        this.rAF = requestAnimationFrame(this.updateAnimationState);\n    }\n\n    updateAnimationState() {\n        let current = Date.now();\n        let dt = this.state.last - current;\n        let boxes = this.state.boxes || [];\n        boxes.forEach(box => {\n            box.x = box.x + box.velx * dt / 1000;\n            box.y = box.y + box.vely * dt / 1000;\n            box.vely -= 9.8;\n\n            if(box.y < 0){\n                box.y = 0;\n                box.vely = -box.vely;\n            }\n            if (box.x < 0) {\n                box.x = 0;\n                box.velx = -box.velx;\n            }\n            if(box.y + box.h > this.state.height){\n                box.y = this.state.height - box.h;\n                box.vely = -box.vely;\n            }\n            if(box.x + box.w > this.state.width){\n                box.x = this.state.width - box.w;\n                box.velx = -box.velx;\n            }\n\n        this.spawnText(current);\n        });\n        this.setState({ boxes: boxes, last: current});\n        this.rAF = requestAnimationFrame(this.updateAnimationState);\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this.rAF);\n    }\n\n    render() {\n        return (\n            <Canvas boxes={this.state.boxes} updateDimensions={this.updateDimensions} />\n        )\n    }\n}\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveContext = this.saveContext.bind(this);\n        this.bgColor = \"blue\";\n    }\n\n    saveContext(ctx) {\n        this.ctx = ctx;\n    }\n\n    componentDidUpdate() {\n        const width = this.ctx.canvas.width;\n        const height = this.ctx.canvas.height;\n\n        this.ctx.clearRect(0, 0, width, height);\n        this.ctx.fillStyle = this.bgColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = \"black\";\n        this.ctx.font=\"80px Arial\";\n\n\n        if(this.props.boxes){\n        this.props.boxes.forEach(box => {\n            // this.ctx.fillRect(box.x, box.y, box.w, box.h);\n            this.ctx.fillText(\"NATEWORLD.INFO\", box.x, box.y + box.h);\n            }\n            );\n        }\n    }\n\n    render() {\n        return <PureCanvas contextRef={this.saveContext} updateDimensions={this.props.updateDimensions}></PureCanvas>;\n    }\n}\n\nclass PureCanvas extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {width: 0, height: 0}\n    }\n    // shouldComponentUpdate() { return false; }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize);\n        this.resize()\n    }\n\n    resize(){\n        if(this.divElement){\n        let height = this.divElement.clientHeight - 40;\n        let width = this.divElement.clientWidth;\n        this.setState({ height, width });\n        this.props.updateDimensions({height, width});\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.resize);\n    }\n\n    render() {\n        return (\n            <div ref={(divElement) => this.divElement = divElement} style={{ width: \"100%\", height: \"100%\" }}>\n                <canvas style={{width: \"100%\", height: \"100%\"}} width={this.state.width} height={this.state.height}\n                    ref={node => node ? this.props.contextRef(node.getContext('2d')) : null}\n                />\n            </div>\n        )\n    }\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/animatedlogo/animation2.js","webpack:///./src/pages/animatedlogo/me.png"],"names":["Animation","props","_this","_React$Component","call","this","state","width","height","last","Date","now","lastBox","boxes","x","y","velx","vely","w","h","updateAnimationState","bind","_assertThisInitialized","updateDimensions","spawnText","current","length","push","Math","random","setState","dimensions","componentDidMount","rAF","requestAnimationFrame","_this2","dt","forEach","box","componentWillUnmount","cancelAnimationFrame","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Canvas","React","Component","_this3","_React$Component2","saveContext","bgColor","img","Image","onload","src","meImg","ctx","componentDidUpdate","_this4","canvas","clearRect","fillStyle","fillRect","font","drawImage","PureCanvas","contextRef","_this5","_React$Component3","window","addEventListener","resize","divElement","clientHeight","clientWidth","removeEventListener","_this6","ref","style","node","getContext","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-pages-animatedlogo-animation-2-js-1bd07225f8b48aaf142e.js","sourcesContent":["import meImg from './me.png';\nimport React from \"react\";\n\nexport default class Animation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { width: 1000, height: 1000, last: Date.now(), lastBox: Date.now(), boxes: [{ x: 100, y: 100, velx: 80, vely: 20, w: 100, h: 80 }, { x: 200, y: 200, velx: 400, vely: 8, w: 140, h: 80 }] };\n        this.updateAnimationState = this.updateAnimationState.bind(this);\n        this.updateDimensions = this.updateDimensions.bind(this);\n    }\n\n    spawnText(current) {\n        if ((this.state.lastBox - current) / 1000 < -0.2) {\n            if (this.state.boxes.length < 20) {\n                this.state.boxes.push({ x: this.state.width / 2 - 420, y: this.state.height / 2, velx: 80 * Math.random(), vely: 60 + Math.random() * 40, w: Math.random() * 400 + 50, h: 80 });\n                this.setState({ lastBox: Date.now() });\n            }\n        }\n    }\n\n    updateDimensions(dimensions) {\n        this.setState({ width: dimensions.width, height: dimensions.height });\n    }\n\n    componentDidMount() {\n        this.rAF = requestAnimationFrame(this.updateAnimationState);\n    }\n\n    updateAnimationState() {\n        let current = Date.now();\n        let dt = this.state.last - current;\n        let boxes = this.state.boxes || [];\n        boxes.forEach(box => {\n            box.x = box.x + box.velx * dt / 1000;\n            box.y = box.y + box.vely * dt / 1000;\n            box.vely -= 9.8;\n\n            if (box.y < 0) {\n                box.y = 0;\n                box.vely = -box.vely;\n            }\n            if (box.x < 0) {\n                box.x = 0;\n                box.velx = -box.velx;\n            }\n            if (box.y + box.w > this.state.height) {\n                box.y = this.state.height - box.w;\n                box.vely = -box.vely;\n            }\n            if (box.x + box.w > this.state.width) {\n                box.x = this.state.width - box.w;\n                box.velx = -box.velx;\n            }\n\n            this.spawnText(current);\n        });\n        this.setState({ boxes: boxes, last: current });\n        this.rAF = requestAnimationFrame(this.updateAnimationState);\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this.rAF);\n    }\n\n    render() {\n        return (\n            <Canvas boxes={this.state.boxes} updateDimensions={this.updateDimensions} />\n        )\n    }\n}\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveContext = this.saveContext.bind(this);\n        this.bgColor = \"blue\";\n        var img = new Image();\n        this.state={img: null};\n        let current = this;\n        img.onload = function () {\n            current.setState({ img });\n        };\n        img.src = meImg;\n\n    }\n\n    saveContext(ctx) {\n        this.ctx = ctx;\n    }\n\n    componentDidUpdate() {\n        const width = this.ctx.canvas.width;\n        const height = this.ctx.canvas.height;\n\n        this.ctx.clearRect(0, 0, width, height);\n        this.ctx.fillStyle = this.bgColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = \"black\";\n        this.ctx.font = \"80px Arial\";\n\n\n        if (this.props.boxes) {\n            this.props.boxes.forEach(box => {\n                // this.ctx.fillRect(box.x, box.y, box.w, box.h);\n                // this.ctx.fillText(\"NATEWORLD.INFO\", box.x, box.y + box.h);\n                if(this.state.img){\n                    this.ctx.drawImage(this.state.img, box.x, box.y, box.w, box.w);\n                }\n            }\n            );\n        }\n    }\n\n    render() {\n        return <PureCanvas contextRef={this.saveContext} updateDimensions={this.props.updateDimensions}></PureCanvas>;\n    }\n}\n\nclass PureCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { width: 0, height: 0 }\n    }\n    // shouldComponentUpdate() { return false; }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize);\n        this.resize()\n    }\n\n    resize() {\n        if (this.divElement) {\n            let height = this.divElement.clientHeight - 40;\n            let width = this.divElement.clientWidth;\n            this.setState({ height, width });\n            this.props.updateDimensions({ height, width });\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.resize);\n    }\n\n    render() {\n        return (\n            <div ref={(divElement) => this.divElement = divElement} style={{ width: \"100%\", height: \"100%\" }}>\n                <canvas style={{ width: \"100%\", height: \"100%\" }} width={this.state.width} height={this.state.height}\n                    ref={node => node ? this.props.contextRef(node.getContext('2d')) : null}\n                />\n            </div>\n        )\n    }\n}","module.exports = __webpack_public_path__ + \"static/me-ae07429898c147498a3da60afe32c41f.png\";"],"sourceRoot":""}
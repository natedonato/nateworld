{"version":3,"sources":["webpack:///./src/pages/txt/txtItem.js"],"names":["txtItem","props","_this","_React$Component","call","this","file","state","text","node","rawMarkdownBody","componentDidUpdate","prevProps","id","setState","handleChange","e","target","value","render","_this2","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react_draggable__WEBPACK_IMPORTED_MODULE_1___default","handle","defaultPosition","x","y","position","scale","onStart","handleStart","onDrag","handleDrag","onStop","handleStop","style","zIndex","className","frontmatter","title","onClick","closeWindow","onChange","React","Component"],"mappings":"4IAGMA,sBACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OACdA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACQJ,MAAMK,OACVJ,EAAKK,MAAQ,CAAEC,KAAMN,EAAKD,MAAMK,KAAKG,KAAKC,kBAHhCR,oHAOlBS,mBAAA,SAAmBC,GACZP,KAAKJ,MAAMK,KAAKG,KAAKI,KAAOD,EAAUN,KAAKG,KAAKI,IAE/CR,KAAKS,SAAS,CAACN,KAAMH,KAAKJ,MAAMK,KAAKG,KAAKC,qBAIlDK,aAAA,SAAaC,GACTX,KAAKS,SAAS,CACVN,KAAMQ,EAAEC,OAAOC,WAIvBC,OAAA,WAAQ,IAAAC,EAAAf,KACJ,OAAIA,KAAKJ,MAAMK,KAKXe,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,OAAO,UACPC,gBAAiB,CAAEC,EAAG,EAAGC,EAAG,GAC5BC,SAAU,KACVC,MAAO,EACPC,QAAS1B,KAAK2B,YACdC,OAAQ5B,KAAK6B,WACbC,OAAQ9B,KAAK+B,YACbf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEC,OAAQ,IAAMC,UAAU,aACtClB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,uBACPlB,EAAAC,EAAAC,cAAA,YAAOlB,KAAKJ,MAAMK,KAAKG,KAAK+B,YAAYC,OAExCpB,EAAAC,EAAAC,cAAA,OAAKmB,QAASrC,KAAKJ,MAAM0C,YAAaJ,UAAU,eAAhD,QAORlB,EAAAC,EAAAC,cAAA,YAAUgB,UAAU,oBACpBrB,MAAOb,KAAKE,MAAMC,KAClBoC,SAAU,SAAC5B,GAAD,OAAOI,EAAKL,aAAaC,QAzBhC,SAvBG6B,IAAMC,WAuDb9C","file":"component---src-pages-txt-txt-item-js-505849a9cf4c76cdcde9.js","sourcesContent":["import React from \"react\";\nimport Draggable from 'react-draggable';\n\nclass txtItem extends React.Component{\n    constructor(props){\n        super(props);\n        if(this.props.file){\n            this.state = { text: this.props.file.node.rawMarkdownBody };\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.file.node.id !== prevProps.file.node.id)\n        {\n            this.setState({text: this.props.file.node.rawMarkdownBody});\n        }\n    } \n\n    handleChange(e) {\n        this.setState({\n            text: e.target.value\n        });\n    }\n\n    render(){\n        if(!this.props.file){\n            return null;\n        }\n\n        return (\n            <Draggable\n                handle=\".handle\"\n                defaultPosition={{ x: 0, y: 0 }}\n                position={null}\n                scale={1}\n                onStart={this.handleStart}\n                onDrag={this.handleDrag}\n                onStop={this.handleStop}>\n                <div style={{ zIndex: 10 }} className=\"txtWindow\">\n                <div className=\"txtWindowNav handle\">\n                        <span>{this.props.file.node.frontmatter.title}</span>\n\n                        <div onClick={this.props.closeWindow} className=\"closeButton\"> x </div>\n                </div>\n                {/* <div className=\"menuBar\">\n                    <span> File </span>\n                    <span> Edit </span>\n                    <span> Help </span>\n                </div> */}\n                <textarea className=\"txtWindowtextarea\" \n                value={this.state.text} \n                onChange={(e) => this.handleChange(e)} />\n                </div>\n            </Draggable>\n        )\n        }\n}\n\nexport default txtItem;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/photos/slideshow.js","webpack:///./src/pages/temp.js"],"names":["SlideShow","_useState","useState","index","setIndex","allFile","_public_static_d_227038146_json__WEBPACK_IMPORTED_MODULE_0__","data","length","edges","node","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","alt","src","publicURL","style","width","height","objectFit","className","map","edge","idx","onClick","__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_photos_slideshow__WEBPACK_IMPORTED_MODULE_1__","_ref","site","siteMetadata","title"],"mappings":"sKAGe,SAASA,IAAY,IAAAC,EACNC,mBAAS,GAA5BC,EADyBF,EAAA,GAClBG,EADkBH,EAAA,GAExBI,EAFwBC,EAAAC,KAExBF,QAeFG,EAASH,EAAQI,MAAMD,OAAS,EAK9BE,EAASL,EAAQI,MAAMN,GAAvBO,KACR,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,MAAMC,IAAKL,EAAKM,UAAWC,MAAO,CAACC,MAAO,QAASC,OAAQ,QAASC,UAAW,aACxFT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,cACdhB,EAAQI,MAAMa,IAAI,SAACC,EAAMC,GAAP,OACfb,EAAAC,EAAAC,cAAA,OAAKC,IAAI,YAAWC,IAAKQ,EAAKb,KAAKM,UAAWS,QAAS,kBAAMrB,EAASoB,IAAMP,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,UAAW,iBAIzIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQY,QAAS,kBAbXrB,EAAJ,IAAVD,EAAuBK,EAAmBL,EAAQ,KAa1C,YACAQ,EAAAC,EAAAC,cAAA,UAAQY,QAAS,kBAhBNrB,EAAnBD,IAAUK,EAAkB,EAAcL,EAAQ,KAgB1C,6CCtChBuB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIeE,EAAA,iBAAAO,GAAA,IAAG5B,EAAH4B,EAAG5B,KAAH,OACXyB,EAAApB,EAAAC,cAAA,WACImB,EAAApB,EAAAC,cAAA,mBAAWN,EAAK6B,KAAKC,aAAaC,OAClCN,EAAApB,EAAAC,cAAA,+KAIJmB,EAAApB,EAAAC,cAACqB,EAAA,QAAD,QAIG,IAAMJ,EAAK","file":"component---src-pages-temp-js-34546a927326b0837fd2.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default function SlideShow() {\n    const [index, setIndex] = useState(0)\n    const { allFile } = useStaticQuery(\n        graphql`\n      query {\n  allFile(filter: {absolutePath: {regex: \"/(/photos/gifs)/.*.gif$/\"}}) {\n    edges {\n      node {\n        id\n        publicURL\n      }\n    }\n  }\n}\n    `\n    );\n    //Minus 1 for array offset from 0\n    const length = allFile.edges.length - 1\n    const handleNext = () =>\n        index === length ? setIndex(0) : setIndex(index + 1)\n    const handlePrevious = () =>\n        index === 0 ? setIndex(length) : setIndex(index - 1)\n    const { node } = allFile.edges[index];\n    return (\n        <div>\n            <div>\n                <img alt=\"gif\" src={node.publicURL} style={{width: \"500px\", height: \"500px\", objectFit: \"contain\"}}></img>\n                <div className=\"imgGallery\">\n                {allFile.edges.map((edge, idx) => \n                    <img alt=\"small gif\"src={edge.node.publicURL} onClick={() => setIndex(idx)} style={{ width: \"100px\", height: \"100px\", objectFit: \"contain\" }}></img>\n                )}\n                </div>\n            </div>\n            <div>\n                <button onClick={() => handlePrevious()}>Previous</button>\n                <button onClick={() => handleNext()}>Next</button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Slideshow from './photos/slideshow';\n\nexport default ({ data }) => (\n    <div>\n        <h1>About {data.site.siteMetadata.title}</h1>\n        <p>\n            I made this site using Gatsby and React from the ground up using very few plugins or external libraries.  This is the page I use to test GraphQL queries.\n            Welcome.\n    </p>\n    <Slideshow />\n    </div>\n)\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n}\n`"],"sourceRoot":""}